/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.unice.cotedazur.l3ia.chart.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.unice.cotedazur.l3ia.chart.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.unice.cotedazur.l3ia.chart.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgramme
entryRuleProgramme
:
{ before(grammarAccess.getProgrammeRule()); }
	 ruleProgramme
{ after(grammarAccess.getProgrammeRule()); } 
	 EOF 
;

// Rule Programme
ruleProgramme 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgrammeAccess().getGroup()); }
		(rule__Programme__Group__0)
		{ after(grammarAccess.getProgrammeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefilterCondition
entryRulefilterCondition
:
{ before(grammarAccess.getFilterConditionRule()); }
	 rulefilterCondition
{ after(grammarAccess.getFilterConditionRule()); } 
	 EOF 
;

// Rule filterCondition
rulefilterCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterConditionAccess().getAlternatives()); }
		(rule__FilterCondition__Alternatives)
		{ after(grammarAccess.getFilterConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFile
entryRuleFile
:
{ before(grammarAccess.getFileRule()); }
	 ruleFile
{ after(grammarAccess.getFileRule()); } 
	 EOF 
;

// Rule File
ruleFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFileAccess().getGroup()); }
		(rule__File__Group__0)
		{ after(grammarAccess.getFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHTMLFile
entryRuleHTMLFile
:
{ before(grammarAccess.getHTMLFileRule()); }
	 ruleHTMLFile
{ after(grammarAccess.getHTMLFileRule()); } 
	 EOF 
;

// Rule HTMLFile
ruleHTMLFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHTMLFileAccess().getGroup()); }
		(rule__HTMLFile__Group__0)
		{ after(grammarAccess.getHTMLFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleextractedData
entryRuleextractedData
:
{ before(grammarAccess.getExtractedDataRule()); }
	 ruleextractedData
{ after(grammarAccess.getExtractedDataRule()); } 
	 EOF 
;

// Rule extractedData
ruleextractedData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtractedDataAccess().getGroup()); }
		(rule__ExtractedData__Group__0)
		{ after(grammarAccess.getExtractedDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraph
entryRuleGraph
:
{ before(grammarAccess.getGraphRule()); }
	 ruleGraph
{ after(grammarAccess.getGraphRule()); } 
	 EOF 
;

// Rule Graph
ruleGraph 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphAccess().getGroup()); }
		(rule__Graph__Group__0)
		{ after(grammarAccess.getGraphAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getGroup()); }
		(rule__Constant__Group__0)
		{ after(grammarAccess.getConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryBooleanExp
entryRuleBinaryBooleanExp
:
{ before(grammarAccess.getBinaryBooleanExpRule()); }
	 ruleBinaryBooleanExp
{ after(grammarAccess.getBinaryBooleanExpRule()); } 
	 EOF 
;

// Rule BinaryBooleanExp
ruleBinaryBooleanExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryBooleanExpAccess().getGroup()); }
		(rule__BinaryBooleanExp__Group__0)
		{ after(grammarAccess.getBinaryBooleanExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecolRef
entryRulecolRef
:
{ before(grammarAccess.getColRefRule()); }
	 rulecolRef
{ after(grammarAccess.getColRefRule()); } 
	 EOF 
;

// Rule colRef
rulecolRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColRefAccess().getGroup()); }
		(rule__ColRef__Group__0)
		{ after(grammarAccess.getColRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule typeDonnees
ruletypeDonnees
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDonneesAccess().getAlternatives()); }
		(rule__TypeDonnees__Alternatives)
		{ after(grammarAccess.getTypeDonneesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule typeGraph
ruletypeGraph
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeGraphAccess().getAlternatives()); }
		(rule__TypeGraph__Alternatives)
		{ after(grammarAccess.getTypeGraphAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule comOperator
rulecomOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComOperatorAccess().getAlternatives()); }
		(rule__ComOperator__Alternatives)
		{ after(grammarAccess.getComOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterConditionAccess().getConstantParserRuleCall_0()); }
		ruleConstant
		{ after(grammarAccess.getFilterConditionAccess().getConstantParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFilterConditionAccess().getBinaryBooleanExpParserRuleCall_1()); }
		ruleBinaryBooleanExp
		{ after(grammarAccess.getFilterConditionAccess().getBinaryBooleanExpParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFilterConditionAccess().getColRefParserRuleCall_2()); }
		rulecolRef
		{ after(grammarAccess.getFilterConditionAccess().getColRefParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnees__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDonneesAccess().getIntEnumLiteralDeclaration_0()); }
		('int')
		{ after(grammarAccess.getTypeDonneesAccess().getIntEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDonneesAccess().getStringEnumLiteralDeclaration_1()); }
		('string')
		{ after(grammarAccess.getTypeDonneesAccess().getStringEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDonneesAccess().getFloatEnumLiteralDeclaration_2()); }
		('float')
		{ after(grammarAccess.getTypeDonneesAccess().getFloatEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDonneesAccess().getDateEnumLiteralDeclaration_3()); }
		('Date')
		{ after(grammarAccess.getTypeDonneesAccess().getDateEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGraph__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeGraphAccess().getBarChartEnumLiteralDeclaration_0()); }
		('BarChart')
		{ after(grammarAccess.getTypeGraphAccess().getBarChartEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGraphAccess().getAreaChartEnumLiteralDeclaration_1()); }
		('AreaChart')
		{ after(grammarAccess.getTypeGraphAccess().getAreaChartEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGraphAccess().getBubbleChartEnumLiteralDeclaration_2()); }
		('BubbleChart')
		{ after(grammarAccess.getTypeGraphAccess().getBubbleChartEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGraphAccess().getLineChartEnumLiteralDeclaration_3()); }
		('LineChart')
		{ after(grammarAccess.getTypeGraphAccess().getLineChartEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGraphAccess().getScatterChartEnumLiteralDeclaration_4()); }
		('ScatterChart')
		{ after(grammarAccess.getTypeGraphAccess().getScatterChartEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGraphAccess().getRadarChartEnumLiteralDeclaration_5()); }
		('RadarChart')
		{ after(grammarAccess.getTypeGraphAccess().getRadarChartEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGraphAccess().getMixedChartTypesEnumLiteralDeclaration_6()); }
		('MixedChartTypes')
		{ after(grammarAccess.getTypeGraphAccess().getMixedChartTypesEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGraphAccess().getPolarAreaChartEnumLiteralDeclaration_7()); }
		('PolarAreaChart')
		{ after(grammarAccess.getTypeGraphAccess().getPolarAreaChartEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGraphAccess().getPieEnumLiteralDeclaration_8()); }
		('Pie')
		{ after(grammarAccess.getTypeGraphAccess().getPieEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGraphAccess().getDoughnutEnumLiteralDeclaration_9()); }
		('Doughnut')
		{ after(grammarAccess.getTypeGraphAccess().getDoughnutEnumLiteralDeclaration_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComOperatorAccess().getInfEnumLiteralDeclaration_0()); }
		('<')
		{ after(grammarAccess.getComOperatorAccess().getInfEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComOperatorAccess().getSupEnumLiteralDeclaration_1()); }
		('>')
		{ after(grammarAccess.getComOperatorAccess().getSupEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComOperatorAccess().getEqualEnumLiteralDeclaration_2()); }
		('==')
		{ after(grammarAccess.getComOperatorAccess().getEqualEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__0__Impl
	rule__Programme__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getProgrammeKeyword_0()); }
	'Programme'
	{ after(grammarAccess.getProgrammeAccess().getProgrammeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__1__Impl
	rule__Programme__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__2__Impl
	rule__Programme__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getInputAssignment_2()); }
	(rule__Programme__InputAssignment_2)
	{ after(grammarAccess.getProgrammeAccess().getInputAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__3__Impl
	rule__Programme__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getGroup_3()); }
	(rule__Programme__Group_3__0)?
	{ after(grammarAccess.getProgrammeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__4__Impl
	rule__Programme__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getOutputAssignment_4()); }
	(rule__Programme__OutputAssignment_4)
	{ after(grammarAccess.getProgrammeAccess().getOutputAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Programme__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_3__0__Impl
	rule__Programme__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getWhereKeyword_3_0()); }
	'where'
	{ after(grammarAccess.getProgrammeAccess().getWhereKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_3__1__Impl
	rule__Programme__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getLeftParenthesisKeyword_3_1()); }
	'('
	{ after(grammarAccess.getProgrammeAccess().getLeftParenthesisKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_3__2__Impl
	rule__Programme__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getFilterconditionAssignment_3_2()); }
	(rule__Programme__FilterconditionAssignment_3_2)
	{ after(grammarAccess.getProgrammeAccess().getFilterconditionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_3__3__Impl
	rule__Programme__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getGroup_3_3()); }
	(rule__Programme__Group_3_3__0)*
	{ after(grammarAccess.getProgrammeAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getRightParenthesisKeyword_3_4()); }
	')'
	{ after(grammarAccess.getProgrammeAccess().getRightParenthesisKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Programme__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_3_3__0__Impl
	rule__Programme__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getProgrammeAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getFilterconditionAssignment_3_3_1()); }
	(rule__Programme__FilterconditionAssignment_3_3_1)
	{ after(grammarAccess.getProgrammeAccess().getFilterconditionAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__File__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__0__Impl
	rule__File__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getGroup_0()); }
	(rule__File__Group_0__0)?
	{ after(grammarAccess.getFileAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__1__Impl
	rule__File__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getGroup_1()); }
	(rule__File__Group_1__0)?
	{ after(grammarAccess.getFileAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__2__Impl
	rule__File__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getKeepKeyword_2()); }
	'keep('
	{ after(grammarAccess.getFileAccess().getKeepKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__3__Impl
	rule__File__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getKeepAssignment_3()); }
	(rule__File__KeepAssignment_3)
	{ after(grammarAccess.getFileAccess().getKeepAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__4__Impl
	rule__File__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getGroup_4()); }
	(rule__File__Group_4__0)*
	{ after(grammarAccess.getFileAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFileAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__File__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group_0__0__Impl
	rule__File__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getPathKeyword_0_0()); }
	'path='
	{ after(grammarAccess.getFileAccess().getPathKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getPathAssignment_0_1()); }
	(rule__File__PathAssignment_0_1)
	{ after(grammarAccess.getFileAccess().getPathAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__File__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group_1__0__Impl
	rule__File__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getDelimiterKeyword_1_0()); }
	'delimiter='
	{ after(grammarAccess.getFileAccess().getDelimiterKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getDelimiterAssignment_1_1()); }
	(rule__File__DelimiterAssignment_1_1)
	{ after(grammarAccess.getFileAccess().getDelimiterAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__File__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group_4__0__Impl
	rule__File__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getFileAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__File__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__File__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFileAccess().getKeepAssignment_4_1()); }
	(rule__File__KeepAssignment_4_1)
	{ after(grammarAccess.getFileAccess().getKeepAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HTMLFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HTMLFile__Group__0__Impl
	rule__HTMLFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HTMLFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHTMLFileAccess().getGraphAssignment_0()); }
	(rule__HTMLFile__GraphAssignment_0)
	{ after(grammarAccess.getHTMLFileAccess().getGraphAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HTMLFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HTMLFile__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HTMLFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHTMLFileAccess().getGroup_1()); }
	(rule__HTMLFile__Group_1__0)*
	{ after(grammarAccess.getHTMLFileAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HTMLFile__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HTMLFile__Group_1__0__Impl
	rule__HTMLFile__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HTMLFile__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHTMLFileAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getHTMLFileAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HTMLFile__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HTMLFile__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HTMLFile__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHTMLFileAccess().getGraphAssignment_1_1()); }
	(rule__HTMLFile__GraphAssignment_1_1)
	{ after(grammarAccess.getHTMLFileAccess().getGraphAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractedData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtractedData__Group__0__Impl
	rule__ExtractedData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractedDataAccess().getExtractedDataAction_0()); }
	()
	{ after(grammarAccess.getExtractedDataAccess().getExtractedDataAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtractedData__Group__1__Impl
	rule__ExtractedData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractedDataAccess().getColNameKeyword_1()); }
	'colName='
	{ after(grammarAccess.getExtractedDataAccess().getColNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtractedData__Group__2__Impl
	rule__ExtractedData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractedDataAccess().getNameAssignment_2()); }
	(rule__ExtractedData__NameAssignment_2)
	{ after(grammarAccess.getExtractedDataAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtractedData__Group__3__Impl
	rule__ExtractedData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractedDataAccess().getGroup_3()); }
	(rule__ExtractedData__Group_3__0)?
	{ after(grammarAccess.getExtractedDataAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtractedData__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractedDataAccess().getGroup_4()); }
	(rule__ExtractedData__Group_4__0)?
	{ after(grammarAccess.getExtractedDataAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractedData__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtractedData__Group_3__0__Impl
	rule__ExtractedData__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractedDataAccess().getColonKeyword_3_0()); }
	':'
	{ after(grammarAccess.getExtractedDataAccess().getColonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtractedData__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractedDataAccess().getTypeDataAssignment_3_1()); }
	(rule__ExtractedData__TypeDataAssignment_3_1)
	{ after(grammarAccess.getExtractedDataAccess().getTypeDataAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractedData__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtractedData__Group_4__0__Impl
	rule__ExtractedData__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractedDataAccess().getIndexKeyword_4_0()); }
	'index='
	{ after(grammarAccess.getExtractedDataAccess().getIndexKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtractedData__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractedDataAccess().getIndexAssignment_4_1()); }
	(rule__ExtractedData__IndexAssignment_4_1)
	{ after(grammarAccess.getExtractedDataAccess().getIndexAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__0__Impl
	rule__Graph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGroup_0()); }
	(rule__Graph__Group_0__0)?
	{ after(grammarAccess.getGraphAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__1__Impl
	rule__Graph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGroup_1()); }
	(rule__Graph__Group_1__0)?
	{ after(grammarAccess.getGraphAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__2__Impl
	rule__Graph__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getXAxisKeyword_2()); }
	'xAxis ='
	{ after(grammarAccess.getGraphAccess().getXAxisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__3__Impl
	rule__Graph__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getXAxisAssignment_3()); }
	(rule__Graph__XAxisAssignment_3)
	{ after(grammarAccess.getGraphAccess().getXAxisAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGroup_4()); }
	(rule__Graph__Group_4__0)?
	{ after(grammarAccess.getGraphAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_0__0__Impl
	rule__Graph__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getTypeKeyword_0_0()); }
	'type ='
	{ after(grammarAccess.getGraphAccess().getTypeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getTypeAssignment_0_1()); }
	(rule__Graph__TypeAssignment_0_1)
	{ after(grammarAccess.getGraphAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_1__0__Impl
	rule__Graph__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getTitleKeyword_1_0()); }
	'title ='
	{ after(grammarAccess.getGraphAccess().getTitleKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getTitleAssignment_1_1()); }
	(rule__Graph__TitleAssignment_1_1)
	{ after(grammarAccess.getGraphAccess().getTitleAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_4__0__Impl
	rule__Graph__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getYAxisKeyword_4_0()); }
	'yAxis ='
	{ after(grammarAccess.getGraphAccess().getYAxisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_4__1__Impl
	rule__Graph__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getYAxisAssignment_4_1()); }
	(rule__Graph__YAxisAssignment_4_1)
	{ after(grammarAccess.getGraphAccess().getYAxisAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGroup_4_2()); }
	(rule__Graph__Group_4_2__0)*
	{ after(grammarAccess.getGraphAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_4_2__0__Impl
	rule__Graph__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getYAxisKeyword_4_2_0()); }
	'yAxis ='
	{ after(grammarAccess.getGraphAccess().getYAxisKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getYAxisAssignment_4_2_1()); }
	(rule__Graph__YAxisAssignment_4_2_1)
	{ after(grammarAccess.getGraphAccess().getYAxisAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getConstantAction_0()); }
	()
	{ after(grammarAccess.getConstantAccess().getConstantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getConstKeyword_1()); }
	'Const'
	{ after(grammarAccess.getConstantAccess().getConstKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__2__Impl
	rule__Constant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getTypeAssignment_2()); }
	(rule__Constant__TypeAssignment_2)?
	{ after(grammarAccess.getConstantAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getGroup_3()); }
	(rule__Constant__Group_3__0)?
	{ after(grammarAccess.getConstantAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_3__0__Impl
	rule__Constant__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getEqualsSignKeyword_3_0()); }
	'='
	{ after(grammarAccess.getConstantAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getValueAssignment_3_1()); }
	(rule__Constant__ValueAssignment_3_1)
	{ after(grammarAccess.getConstantAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryBooleanExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryBooleanExp__Group__0__Impl
	rule__BinaryBooleanExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryBooleanExpAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getBinaryBooleanExpAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryBooleanExp__Group__1__Impl
	rule__BinaryBooleanExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryBooleanExpAccess().getLhsAssignment_1()); }
	(rule__BinaryBooleanExp__LhsAssignment_1)
	{ after(grammarAccess.getBinaryBooleanExpAccess().getLhsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryBooleanExp__Group__2__Impl
	rule__BinaryBooleanExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryBooleanExpAccess().getOperatorAssignment_2()); }
	(rule__BinaryBooleanExp__OperatorAssignment_2)
	{ after(grammarAccess.getBinaryBooleanExpAccess().getOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryBooleanExp__Group__3__Impl
	rule__BinaryBooleanExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryBooleanExpAccess().getRhsAssignment_3()); }
	(rule__BinaryBooleanExp__RhsAssignment_3)
	{ after(grammarAccess.getBinaryBooleanExpAccess().getRhsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryBooleanExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryBooleanExpAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getBinaryBooleanExpAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColRef__Group__0__Impl
	rule__ColRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColRefAccess().getColRefAction_0()); }
	()
	{ after(grammarAccess.getColRefAccess().getColRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColRefAccess().getExtracteddataAssignment_1()); }
	(rule__ColRef__ExtracteddataAssignment_1)?
	{ after(grammarAccess.getColRefAccess().getExtracteddataAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Programme__InputAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getInputFileParserRuleCall_2_0()); }
		ruleFile
		{ after(grammarAccess.getProgrammeAccess().getInputFileParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__FilterconditionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getFilterconditionFilterConditionParserRuleCall_3_2_0()); }
		rulefilterCondition
		{ after(grammarAccess.getProgrammeAccess().getFilterconditionFilterConditionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__FilterconditionAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getFilterconditionFilterConditionParserRuleCall_3_3_1_0()); }
		rulefilterCondition
		{ after(grammarAccess.getProgrammeAccess().getFilterconditionFilterConditionParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__OutputAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getOutputHTMLFileParserRuleCall_4_0()); }
		ruleHTMLFile
		{ after(grammarAccess.getProgrammeAccess().getOutputHTMLFileParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__PathAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getPathEStringParserRuleCall_0_1_0()); }
		ruleEString
		{ after(grammarAccess.getFileAccess().getPathEStringParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__DelimiterAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getDelimiterEStringParserRuleCall_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getFileAccess().getDelimiterEStringParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__KeepAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getKeepExtractedDataParserRuleCall_3_0()); }
		ruleextractedData
		{ after(grammarAccess.getFileAccess().getKeepExtractedDataParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__File__KeepAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFileAccess().getKeepExtractedDataParserRuleCall_4_1_0()); }
		ruleextractedData
		{ after(grammarAccess.getFileAccess().getKeepExtractedDataParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HTMLFile__GraphAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHTMLFileAccess().getGraphGraphParserRuleCall_0_0()); }
		ruleGraph
		{ after(grammarAccess.getHTMLFileAccess().getGraphGraphParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HTMLFile__GraphAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHTMLFileAccess().getGraphGraphParserRuleCall_1_1_0()); }
		ruleGraph
		{ after(grammarAccess.getHTMLFileAccess().getGraphGraphParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtractedDataAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getExtractedDataAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__TypeDataAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtractedDataAccess().getTypeDataTypeDonneesEnumRuleCall_3_1_0()); }
		ruletypeDonnees
		{ after(grammarAccess.getExtractedDataAccess().getTypeDataTypeDonneesEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractedData__IndexAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtractedDataAccess().getIndexEIntParserRuleCall_4_1_0()); }
		ruleEInt
		{ after(grammarAccess.getExtractedDataAccess().getIndexEIntParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getTypeTypeGraphEnumRuleCall_0_1_0()); }
		ruletypeGraph
		{ after(grammarAccess.getGraphAccess().getTypeTypeGraphEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__TitleAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getTitleEStringParserRuleCall_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getGraphAccess().getTitleEStringParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__XAxisAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getXAxisExtractedDataCrossReference_3_0()); }
		(
			{ before(grammarAccess.getGraphAccess().getXAxisExtractedDataEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getGraphAccess().getXAxisExtractedDataEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getGraphAccess().getXAxisExtractedDataCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__YAxisAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getYAxisExtractedDataCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getGraphAccess().getYAxisExtractedDataEStringParserRuleCall_4_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getGraphAccess().getYAxisExtractedDataEStringParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getGraphAccess().getYAxisExtractedDataCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__YAxisAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getYAxisExtractedDataCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getGraphAccess().getYAxisExtractedDataEStringParserRuleCall_4_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getGraphAccess().getYAxisExtractedDataEStringParserRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getGraphAccess().getYAxisExtractedDataCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getTypeTypeDonneesEnumRuleCall_2_0()); }
		ruletypeDonnees
		{ after(grammarAccess.getConstantAccess().getTypeTypeDonneesEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getValueEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getConstantAccess().getValueEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__LhsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryBooleanExpAccess().getLhsFilterConditionParserRuleCall_1_0()); }
		rulefilterCondition
		{ after(grammarAccess.getBinaryBooleanExpAccess().getLhsFilterConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__OperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryBooleanExpAccess().getOperatorComOperatorEnumRuleCall_2_0()); }
		rulecomOperator
		{ after(grammarAccess.getBinaryBooleanExpAccess().getOperatorComOperatorEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryBooleanExp__RhsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryBooleanExpAccess().getRhsFilterConditionParserRuleCall_3_0()); }
		rulefilterCondition
		{ after(grammarAccess.getBinaryBooleanExpAccess().getRhsFilterConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRef__ExtracteddataAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColRefAccess().getExtracteddataExtractedDataCrossReference_1_0()); }
		(
			{ before(grammarAccess.getColRefAccess().getExtracteddataExtractedDataEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getColRefAccess().getExtracteddataExtractedDataEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getColRefAccess().getExtracteddataExtractedDataCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
