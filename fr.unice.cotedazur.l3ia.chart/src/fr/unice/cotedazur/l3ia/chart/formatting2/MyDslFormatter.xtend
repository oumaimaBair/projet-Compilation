/*
 * generated by Xtext 2.25.0
 */
package fr.unice.cotedazur.l3ia.chart.formatting2

import com.google.inject.Inject
import fr.unice.cotedazur.l3ia.chart.services.MyDslGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import tpNote.File
import tpNote.Programme

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(Programme programme, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		programme.input.format
		programme.output.format
		for (filterCondition : programme.filtercondition) {
			filterCondition.format
		}
	}

	def dispatch void format(File file, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (extractedData : file.keep) {
			extractedData.format
		}
	}
	
	// TODO: implement for HTMLFile, BinaryBooleanExp
}
